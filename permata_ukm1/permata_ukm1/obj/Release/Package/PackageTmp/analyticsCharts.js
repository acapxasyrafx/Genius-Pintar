function init() { myService = new google.gdata.analytics.AnalyticsService("charts_sample"); scope = "https://www.google.com/analytics/feeds"; var e = document.getElementById("authButton"); e.onclick = function() { if (!google.accounts.user.checkLogin(scope)) { google.accounts.user.login(scope) } else { google.accounts.user.logout(); getStatus() } }; getStatus() } function getStatus() { var e = document.getElementById("getAccount"); e.onclick = getAccountFeed; var t = document.getElementById("getData"); t.onclick = getDataFeed; var n = document.getElementById("dataControls"); var r = document.getElementById("authButton"); if (!google.accounts.user.checkLogin(scope)) { n.style.display = "none"; r.innerHTML = "Access Google Analytics" } else { n.style.display = "block"; r.innerHTML = "Logout" } } function getAccountFeed() { var e = "https://www.google.com/analytics/feeds/accounts/default?max-results=50"; myService.getAccountFeed(e, handleAccountFeed, handleError) } function handleAccountFeed(e) { var t = e.feed.getEntries(); var n = ["<table><tr>", "<th>Account Name</th>", "<th>Profile Name</th>", "<th>Profile ID</th>", "<th>Table Id</th></tr>"]; for (var r = 0, i; i = t[r]; ++r) { var s = [i.getPropertyValue("ga:AccountName"), i.getTitle().getText(), i.getPropertyValue("ga:ProfileId"), i.getTableId().getValue()].join("</td><td>"); n.push("<tr><td>", s, "</td></tr>") } n.push("</table>"); document.getElementById("visitorsDiv").innerHTML = n.join("") } function getDataFeed() { var e = ["https://www.google.com/analytics/feeds/data", "?start-date=2010-06-01", "&end-date=2010-06-10", "&dimensions=ga:day,ga:visitorType", "&metrics=ga:visits", "&sort=ga:day", "&max-results=20", "&ids=", document.getElementById("tableId").value].join(""); myService.getDataFeed(e, handleDataFeed, handleError); var t = ["https://www.google.com/analytics/feeds/data", "?start-date=2010-06-01", "&end-date=2010-06-10", "&dimensions=ga:day", "&metrics=ga:bounces,ga:entrances", "&sort=ga:day", "&max-results=10", "&ids=", document.getElementById("tableId").value].join(""); myService.getDataFeed(t, handleBounceFeed, handleError) } function handleDataFeed(e) { document.getElementById("visitorsDiv").innerHTML = ""; var t = getVisitorChartData(e); var n = getBarChart(t); drawChart("visitorsDiv", n.getURL()); var r = getLineChartFromBarChart(n); drawChart("visitorsDiv", r.getURL()); var i = getPieChart(t); drawChart("visitorsDiv", i.getURL()) } function handleBounceFeed(e) { document.getElementById("entrancesDiv").innerHTML = ""; var t = getBounceChartData(e); var n = getEBChart(t); drawChart("entrancesDiv", n.getURL()); n.setParam("cht", "lc"); drawChart("entrancesDiv", n.getURL()); n.setParams({ chm: "D,0033FF,1,0,5,1", cht: "bvg", chd: n.getParam("chd").replace("t", "t1") }); drawChart("entrancesDiv", n.getURL()) } function getScaleData(e) { var t = [0, 0]; var n = Math.log(e) / Math.LN10; n = Math.ceil(n); var r = Math.pow(10, n); if (r / 5 > e) { r = r / 5 } while (r > e * 2) { r = r / 2 } var i = r / 5; t[0] = r; t[1] = i; return t } function fillToSameSize(e, t) { if (e.length < t.length) { e.push(0) } else if (t.length < e.length) { t.push(0) } } function getVisitorChartData(e) { var t = e.feed.getEntries(); var n = []; var r = []; var i = []; var s = 0; var o = 0; for (var u = 0, a; a = t[u]; ++u) { var f = a.getValueOf("ga:visitorType"); var l = a.getValueOf("ga:visits"); var c = parseInt(a.getValueOf("ga:day"), 10); if (!i.length) { i.push(c) } else { var h = i[i.length - 1]; if (c != h) { i.push(c); fillToSameSize(r, n) } } if (f == "New Visitor") { r.push(l); o = Math.max(o, l) } else { n.push(l); s = Math.max(s, l) } } fillToSameSize(r, n); return { returningVisitors: n, newVisitors: r, maxNewVisitors: o, maxReturningVisitors: s, days: i} } function getBounceChartData(e) { var t = e.feed.getEntries(); var n = []; var r = []; var i = []; var s = 0; var o = 0; for (var u = 0, a; a = t[u]; ++u) { var f = a.getValueOf("ga:day"); var l = a.getValueOf("ga:entrances"); s = Math.max(l, s); var c = a.getValueOf("ga:bounces"); o = Math.max(c, o); i.push(parseInt(f, 10)); n.push(l); r.push(c) } return { maxValue: Math.max(o, s), bounces: r, entrances: n, days: i }; return chartData } function getBarChart(e) { var t = getChartObj(); var n = e.returningVisitors.join(","); var r = e.newVisitors.join(","); var i = e.maxReturningVisitors + e.maxNewVisitors; scaleData = getScaleData(i); t.setParams({ chs: "500x150", chxt: "x,y", chts: "000000,15", cht: "bvs", chco: "a3d5f7,389ced", chbh: "a,5,20", chm: "N,FF0000,-1,,12", chtt: "Visitors+By+Type", chdl: "Returning+Visitors|New+Visitors", chd: "t:" + n + "|" + r, chxl: "0:|" + e.days.join("|"), chds: "0," + scaleData[0], chxr: "1,0," + scaleData.join(",") }); return t } function getArraySum(e) { var t = 0; for (var n = 0; n < e.length; n++) { t += e[n] } return t } function getPieChart(e) { var t = getChartObj(); var n = getArraySum(e.newVisitors); var r = getArraySum(e.returningVisitors); e.maxValue = r + n; t.setParams({ chs: "500x150", chts: "000000,15", cht: "p3", chco: "a3d5f7,389ced", chtt: "Visitors+By+Type", chdl: "Returning+Visitors|New+Visitors", chd: "t:" + r + "," + n, chl: r + "|" + n, chds: "0," + e.maxValue }); return t } function getEBChart(e) { var t = getChartObj(); var n = e.bounces.join(","); var r = e.entrances.join(","); scaleData = getScaleData(e.maxValue); t.setParams({ chs: "500x150", chxt: "x,y", chts: "000000,15", cht: "bvg", chco: "a3d5f7,389ced", chbh: "a,5,20", chtt: "Entrances+vs+Bounces", chdl: "Entrances|Bounces", chd: "t:" + r + "|" + n, chxl: "0:|" + e.days.join("|"), chds: "0," + scaleData[0], chxr: "1,0," + scaleData.join(",") }); return t } function drawChart(e, t) { document.getElementById(e).innerHTML += '<img src="' + t + '" /><br />' } function getLineChartFromBarChart(e) { var t = getChartObj(); t.setParams(e.getParams()); t.setParam("cht", "lc"); t.setParam("chm", ""); return t } function handleError(e) { var t = "There was an error!\n"; if (e.cause) { t += e.cause.status } else { t.message } alert(t) } function getChartObj() { function n() { return e } function r(t) { return e[t] } function i(t, n) { if (e[t] !== undefined) { e[t] = n } } function s(e) { for (key in e) { i(key, e[key]) } } function o() { paramArray = []; for (key in e) { if (e[key]) { pairStr = [key, e[key]].join("="); paramArray.push(pairStr) } } paramStr = paramArray.join("&"); url = [t, paramStr].join("?"); return url } var e = { chs: "", chtt: "", chxt: "", chts: "", cht: "", chd: "", chdl: "", chco: "", chbh: "", chxl: "", chds: "", chxr: "", chm: "", chl: "" }; var t = "http://chart.apis.google.com/chart"; return { getParam: r, getParams: n, setParam: i, setParams: s, getURL: o} } google.load("gdata", "2.x", { packages: ["analytics"] }); google.setOnLoadCallback(init)